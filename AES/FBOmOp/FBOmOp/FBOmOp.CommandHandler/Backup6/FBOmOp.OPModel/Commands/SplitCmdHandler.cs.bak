using System;
using System.Collections.Generic;
using System.Linq;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Common.Information;
using Siemens.SimaticIT.Handler;
using Siemens.SimaticIT.Unified;
using VF.OperationalData.FBOmOp.OPModel.DataModel;

namespace VF.OperationalData.FBOmOp.OPModel.Commands
{
    /// <summary>
    /// Partial class init
    /// </summary>
    [Handler(HandlerCategory.BasicMethod)]
    public partial class SplitCmdHandlerShell 
    {
        /// <summary>
        /// This is the handler the MES engineer should write
        /// This is the ENTRY POINT for the user in VS IDE
        /// </summary>
        /// <param name="command"></param>
        /// <returns></returns>
        [HandlerEntryPoint]
        private SplitCmd.Response SplitCmdHandler(SplitCmd command)
        {

            // Put your code here
            // return new SplitOrderCmd.Response() { ... };
            try
            {
                switch (command.Action)
                {
                    case "SPLIT":
                        handleSplit(command);
                        break;
                }
            }
            catch (Exception ex)
            {
                return new SplitCmd.Response();
            }
            return new SplitCmd.Response();
        }

        private void handleSplit(SplitCmd command)
        {


            List<IOrderDef> insertList = new List<IOrderDef>();

            for (int i = 0; i < command.SplitCmd_.Quantity; i++)
            {
                if (command.SplitCmd_.Type == "BatchOrder" && command.SplitCmd_.Status == "Split")
                {

                    var itemSplit = platform.Create<IProductionOrder>();
                    itemSplit.NId = command.SplitCmd_.NId;
                    itemSplit.ParrentId = command.SplitCmd_.NId;
                    itemSplit.Type = "ProductionOrder";
                    itemSplit.Status = command.SplitCmd_.Status;
                    itemSplit.MaterialFinal = command.SplitCmd_.MaterialFinal;
                    itemSplit.PlanStartDate = command.SplitCmd_.PlanStartDate;
                    itemSplit.PlanEndDate = command.SplitCmd_.PlanEndDate;
                    itemSplit.Quantity = 1;
                    itemSplit.SerialNumber = "";

                    insertList.Add(itemSplit);
                    
                }
                else
                {
                    throw new Exception($"OrderType phai la BatchOrder");
                }
            }
            platform.BulkImport(insertList, new BulkImportOptions() { });


            // throw new NotImplementedException();
        }
    }
}
